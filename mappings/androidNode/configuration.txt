# The proguard configuration file for the following section is /Users/rodvar/Projects/bisq-mobile/androidNode/build/intermediates/aapt_proguard_file/release/processReleaseResources/aapt_rules.txt
-keep class androidx.camera.core.impl.MetadataHolderService { <init>(); }
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.profileinstaller.ProfileInstallReceiver { <init>(); }
-keep class androidx.startup.InitializationProvider { <init>(); }
-keep class com.google.android.datatransport.runtime.backends.TransportBackendDiscovery { <init>(); }
-keep class com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver { <init>(); }
-keep class com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService { <init>(); }
-keep class com.google.android.gms.common.api.GoogleApiActivity { <init>(); }
-keep class com.google.mlkit.common.internal.MlKitComponentDiscoveryService { <init>(); }
-keep class com.google.mlkit.common.internal.MlKitInitProvider { <init>(); }
-keep class com.jakewharton.processphoenix.PhoenixActivity { <init>(); }
-keep class com.jakewharton.processphoenix.PhoenixService { <init>(); }
-keep class network.bisq.mobile.android.node.NodeMainActivity { <init>(); }
-keep class network.bisq.mobile.android.node.NodeMainApplication { <init>(); }
-keep class network.bisq.mobile.presentation.notification.ForegroundService { <init>(); }
-keep class org.jetbrains.compose.resources.AndroidContextProvider { <init>(); }
-keep class android.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContainer { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.DialogTitle { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.Toolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ViewStubCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.core.widget.NestedScrollView { <init>(android.content.Context, android.util.AttributeSet); }


# End of content from /Users/rodvar/Projects/bisq-mobile/androidNode/build/intermediates/aapt_proguard_file/release/processReleaseResources/aapt_rules.txt
# The proguard configuration file for the following section is /Users/rodvar/Projects/bisq-mobile/androidNode/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.10.1
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
-allowaccessmodification

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from /Users/rodvar/Projects/bisq-mobile/androidNode/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.10.1
# The proguard configuration file for the following section is /Users/rodvar/Projects/bisq-mobile/androidNode/proguard-rules.pro
# Bisq Node proguard file

### protobuf deps
-dontwarn java.lang.MatchException

# Keep gRPC and Netty classes
-keep class io.grpc.** { *; }
-keep class io.netty.** { *; }
-keep class io.grpc.netty.shaded.io.netty.** { *; }

# Keep all the missing classes that are referenced but not directly used
-dontwarn com.aayushatharva.brotli4j.**
-dontwarn com.github.luben.zstd.**
-dontwarn com.google.protobuf.nano.**
-dontwarn com.jcraft.jzlib.**
-dontwarn com.ning.compress.**
-dontwarn com.oracle.svm.core.**
-dontwarn lzma.sdk.**
-dontwarn net.jpountz.lz4.**
-dontwarn net.jpountz.xxhash.**
-dontwarn org.apache.logging.log4j.**
-dontwarn org.bouncycastle.openssl.**
-dontwarn org.bouncycastle.operator.**
-dontwarn org.bouncycastle.pkcs.**
-dontwarn org.conscrypt.**
-dontwarn org.eclipse.jetty.alpn.**
-dontwarn org.eclipse.jetty.npn.**
-dontwarn org.jboss.marshalling.**
-dontwarn reactor.blockhound.**
-dontwarn sun.security.x509.**

# Don't shrink/obfuscate build-time plugins
-dontwarn com.android.build.**
-dontwarn com.google.protobuf.gradle.**
-dontwarn org.codehaus.groovy.**
-dontwarn javax.inject.**
-dontwarn org.gradle.**
-dontwarn javassist.**
-dontwarn org.apache.maven.**
-dontwarn kr.motd.maven.**
-dontwarn org.eclipse.**

# Keep core Android/Gradle plugin APIs
-keep class com.android.** { *; }
-keep class org.gradle.** { *; }

# Keep any native methods
-keepclasseswithmembernames class * {
    native <methods>;
}

# Keep all classes that might be used via reflection
-keep class * implements java.io.Serializable { *; }

# Keep classes used by androidx.datastore persistence
-keep class network.bisq.mobile.domain.data.model.** { *; }
-keep class network.bisq.mobile.domain.data.datastore.** { *; }

# Keep androidx.datastore classes and serializers
-keep class androidx.datastore.** { *; }
-keep class * implements androidx.datastore.core.okio.OkioSerializer { *; }
-keepclassmembers class * implements androidx.datastore.core.okio.OkioSerializer {
    public <methods>;
}

###########################################
# Core Bisq Protobuf preservation rules
###########################################

# Keep all Bisq core classes
-keep class org.bisq.** { *; }
-keep class bisq.** { *; }
-keep class chat.** { *; }
-keep class network.** { *; }
-keep class bonded_roles.** { *; }
-keep class user.** { *; }

# Keep all Protobuf-related classes
-keep class com.google.protobuf.** { *; }

# Keep names for Protobuf types to match type_url
-keepnames class * implements com.google.protobuf.MessageLite
-keepnames class * extends com.google.protobuf.GeneratedMessageLite
-keepnames class * extends com.google.protobuf.GeneratedMessageV3

# Keep inner builder classes and their members
-keep class **$Builder { *; }
-keepclassmembers class *$Builder { *; }

# Keep class members of any class extending GeneratedMessageLite
-keepclassmembers class * extends com.google.protobuf.GeneratedMessageLite {
    <fields>;
    <methods>;
}

# Keep all protobuf resolver classes and their names - CRITICAL FOR PROTOBUF DESERIALIZATION
-keep class bisq.common.proto.ProtoResolver { *; }
-keep class bisq.common.proto.PersistableProtoResolverMap { *; }
-keep class bisq.common.proto.NetworkStorageWhiteList { *; }
-keep class * implements bisq.common.proto.PersistableProtoResolver { *; }

# Keep all static initializers (needed for PersistableProtoResolverMap)
-keepclassmembers class * {
    static <clinit>();
}

# Keep annotations used for proto type resolving
-keepattributes RuntimeVisibleAnnotations
-keepattributes RuntimeVisibleParameterAnnotations
-keepattributes RuntimeInvisibleAnnotations
-keepattributes *Annotation*

# Keep fields and methods used for reflection
-keepclassmembers class * {
    @com.google.protobuf.* *;
}

# Keep resolver and registration methods
-keepclassmembers class * {
    static *** register*(...);
    public static void register(...);
    public static * fromAny(...);
    public static bisq.common.proto.ProtoResolver getResolver();
    public static bisq.common.proto.ProtoResolver getNetworkMessageResolver();
    public static * fromProto(*);
}

# Keep protobuf internal cached size fields and related synthetic methods
-keepclassmembers class * {
    int memoizedSerializedSize;
    int memoizedSize;
    int memoizedHashCode;
    synthetic <methods>;
}
-keepclassmembers class * extends com.google.protobuf.GeneratedMessageLite {
    public int getSerializedSize();
}

# Keep statics and enums used in Protobuf
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}
-keepclassmembers class * {
    static <fields>;
    static <methods>;
}

# Keep anything under .proto. packages if they exist
-keep class **.proto.** { *; }
-keepnames class **.proto.**

# Keep persistence store classes
-keep class bisq.persistence.** { *; }
-keep class bisq.network.identity.** { *; }

# Keep all Bouncy Castle classes
-keep class org.bouncycastle.** { *; }

# Keep all Tor-related classes
-keep class org.torproject.** { *; }

# Ignore missing Java desktop/server classes
-dontwarn com.sun.net.httpserver.**
-dontwarn jakarta.servlet.**
-dontwarn java.awt.**
-dontwarn java.awt.image.**
-dontwarn javax.servlet.**
-dontwarn javax.**
-dontwarn jakarta.**

# Keep Logback and SLF4J classes
-keep class ch.qos.logback.** { *; }
-keep class org.slf4j.** { *; }
-dontwarn ch.qos.logback.**
-dontwarn org.slf4j.**

# Keep Bisq logging classes specifically
-keep class bisq.common.logging.** { *; }

# Keep logback configuration classes that use reflection
-keep class ch.qos.logback.core.rolling.** { *; }
-keep class ch.qos.logback.classic.** { *; }

## General Android/Kotlin/Compose

# Keep Kotlin Metadata
-keepattributes KotlinMetadata
-keepattributes InnerClasses
-keepattributes EnclosingMethod

# Keep KMP Framework Class Names
-keep class kotlinx.** { *; }

# Keep Compose Compiler Intrinsics - More specific rules to avoid lock verification issues
-keep class androidx.compose.runtime.** { *; }
-keep class androidx.compose.runtime.snapshots.** { *; }
-keep class androidx.compose.ui.** { *; }

# Keep all classes annotated with @Composable
-keep class * {
    @androidx.compose.runtime.Composable *;
}

# Prevent lock verification issues with Compose state management
-keep class androidx.compose.runtime.snapshots.SnapshotStateList {
    public <methods>;
}

# Keep Compose compiler generated classes
-keep class **.*ComposableSingletons* { *; }
-keep class **.*LiveLiterals* { *; }

# Keep Composer Intrinsics
-keep class androidx.compose.runtime.internal.ComposableLambdaImpl { *; }

# Keep Compose Preview Annotations
-keep @androidx.compose.ui.tooling.preview.Preview class * { *; }

# Keep Kotlin metadata
-keep class kotlin.Metadata { *; }

# Keep Koin classes and avoid stripping DI components
-keep class org.koin.** { *; }
-keepclassmembers class * {
    @org.koin.core.annotation.* <fields>;
    @org.koin.core.annotation.* <methods>;
}

# Comprehensive -dontwarn section (consolidated)
-dontwarn com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector
-dontwarn com.sun.xml.fastinfoset.sax.AttributesHolder
-dontwarn com.sun.jdi.**
-dontwarn com.sun.xml.fastinfoset.stax.**
-dontwarn groovy.lang.**
-dontwarn groovy.transform.Generated
-dontwarn java.beans.**
-dontwarn java.lang.Module
-dontwarn java.lang.management.**
-dontwarn java.lang.reflect.AnnotatedType
-dontwarn javax.imageio.**
-dontwarn javax.mail.**
-dontwarn javax.management.**
-dontwarn javax.naming.**
-dontwarn javax.xml.stream.**
-dontwarn org.apache.avalon.framework.logger.Logger
-dontwarn org.apache.log.**
-dontwarn org.apache.log4j.**
-dontwarn org.apache.commons.logging.impl.Log4JLogger
-dontwarn org.apache.maven.**
-dontwarn org.brotli.dec.BrotliInputStream
-dontwarn org.codehaus.groovy.**
-dontwarn org.codehaus.janino.**
-dontwarn org.codehaus.plexus.component.annotations.Component
-dontwarn org.conscrypt.Conscrypt
-dontwarn org.eclipse.ui.IStartup
-dontwarn org.graalvm.nativeimage.hosted.Feature
-dontwarn org.hibernate.validator.HibernateValidator
-dontwarn org.ietf.jgss.**
-dontwarn org.jvnet.**
-dontwarn org.osgi.framework.**
-dontwarn sun.reflect.Reflection

# Keep specific classes that need explicit preservation
-keep class org.apache.commons.logging.impl.Log4JLogger { *; }

# Disable all optimizations that could break protobuf
-dontoptimize
-dontobfuscate

# Keep all protobuf and resolver classes completely intact
-keep class bisq.common.proto.** { *; }
-keep class bisq.persistence.** { *; }
-keep class bisq.network.p2p.services.data.storage.** { *; }
-keep class bisq.network.p2p.message.** { *; }

# Keep all protobuf generated classes
-keep class com.google.protobuf.** { *; }
-keep class **.protobuf.** { *; }

# Keep all store classes and their methods
-keep class **.*Store { *; }
-keep class * implements bisq.persistence.PersistableStore { *; }

# Keep resolver registration
-keep class bisq.application.ResolverConfig { *; }

# Keep all lambda expressions and synthetic methods
-keep class * {
    synthetic <methods>;
    static synthetic <methods>;
}

# Preserve line numbers for debugging
-keepattributes SourceFile,LineNumberTable

# More aggressive external library shrinking
-keep class !bisq.**,!network.bisq.**,!com.google.protobuf.**,!io.grpc.**,!io.netty.**,!org.bouncycastle.**,!ch.qos.logback.**,!org.slf4j.** { *; }

# Allow removal of unused external library methods and debug logs in release builds
-assumenosideeffects class android.util.Log {
    public static *** d(...);
    public static *** v(...);
    public static *** i(...);
}

# Remove Kermit debug/info/verbose logs in release builds
-assumenosideeffects class co.touchlab.kermit.Logger {
    public *** d(...);
    public *** v(...);
    public *** i(...);
}

# Remove debug log calls from our logging interface
-assumenosideeffects class * implements network.bisq.mobile.domain.utils.Logging {
    *** log.d(...);
    *** log.v(...);
    *** log.i(...);
}

# Remove System.out and System.err calls from Bisq2 JARs in release builds
-assumenosideeffects class java.lang.System {
    public static java.io.PrintStream out;
    public static java.io.PrintStream err;
}
-assumenosideeffects class java.io.PrintStream {
    public *** println(...);
    public *** print(...);
    public *** printf(...);
    public *** format(...);
}

# Remove specific verbose logging calls from Bisq2 protobuf classes
-assumenosideeffects class bisq.network.protobuf.** {
    *** getSerializedSize(...);
}
-assumenosideeffects class bisq.chat.protobuf.** {
    *** getSerializedSize(...);
}
-assumenosideeffects class bisq.offer.protobuf.** {
    *** getSerializedSize(...);
}

# End of content from /Users/rodvar/Projects/bisq-mobile/androidNode/proguard-rules.pro
# The proguard configuration file for the following section is /Users/rodvar/Projects/bisq-mobile/shared/kscan/build/intermediates/consumer_proguard_dir/release/exportReleaseConsumerProguardFiles/lib0/proguard.txt
# Consumer ProGuard rules for the KScan library
# Packaged with the AAR and applied by consuming apps in release builds.

# ML Kit vision barcode (keep internals referenced via reflection)
-keep class com.google.mlkit.** { *; }
-keep class com.google.android.gms.internal.mlkit_vision_barcode** { *; }
-dontwarn com.google.mlkit.**
-dontwarn com.google.android.gms.internal.mlkit_vision_barcode**

# CameraX core and interop
-keep class androidx.camera.** { *; }
-dontwarn androidx.camera.**

# Prevent obfuscation of KScan public API to keep binary compatibility
-keep class org.ncgroup.kscan.** { *; }


# End of content from /Users/rodvar/Projects/bisq-mobile/shared/kscan/build/intermediates/consumer_proguard_dir/release/exportReleaseConsumerProguardFiles/lib0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/494db5ab1658d9b696a38ca215d130f0/transformed/jetified-camera-video-1.5.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/494db5ab1658d9b696a38ca215d130f0/transformed/jetified-camera-video-1.5.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/28f6074b912a70bd1078d18f4f235ce3/transformed/jetified-camera-extensions-1.5.0/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Needs to keep the classes implementing the vendor library interfaces in the extensions module.
# Otherwise, it will cause AbstractMethodError if proguard is enabled.
-keep class androidx.camera.extensions.ExtensionsManager$** {*;}
-keep class androidx.camera.extensions.internal.sessionprocessor.AdvancedSessionProcessor$** {*;}
-keep class androidx.camera.extensions.internal.sessionprocessor.StillCaptureProcessor** {*;}
-keep class androidx.camera.extensions.internal.sessionprocessor.PreviewProcessor** {*;}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/28f6074b912a70bd1078d18f4f235ce3/transformed/jetified-camera-extensions-1.5.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/808478621c4d117f6769a0ef16418288/transformed/jetified-camera-camera2-1.5.0/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is necessary for default initialization using Camera2Config
-keep public class androidx.camera.camera2.Camera2Config$DefaultProvider { *; }
# This is used to workaround a framework issue. See b/397601512.
-keepclassmembers class * extends android.hardware.camera2.CameraCaptureSession$CaptureCallback {
    public void onReadoutStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long);
}
# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/808478621c4d117f6769a0ef16418288/transformed/jetified-camera-camera2-1.5.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/fe0f8999f31576b5b616ef0fccc972ce/transformed/jetified-camera-lifecycle-1.5.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/fe0f8999f31576b5b616ef0fccc972ce/transformed/jetified-camera-lifecycle-1.5.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/90cee0561f3bcdb7b1532b4a2196e562/transformed/jetified-camera-core-1.5.0/proguard.txt
# Copyright (C) 2023 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keeps the quirk classes to prevent them from being merged incorrectly. For more information,
# please see b/278818703. Preserve Quirk subclasses and their names for correct name mapping in
# QuirkSettings.
-keep,allowshrinking class ** extends androidx.camera.core.impl.Quirk

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/90cee0561f3bcdb7b1532b4a2196e562/transformed/jetified-camera-core-1.5.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/7c301a9e87cf5a014d72724458b55d59/transformed/jetified-camera-view-1.5.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/7c301a9e87cf5a014d72724458b55d59/transformed/jetified-camera-view-1.5.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/652aa6c5621fa91fcf33260a434bab00/transformed/jetified-coil-core-release/proguard.txt
-dontwarn coil3.PlatformContext

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/652aa6c5621fa91fcf33260a434bab00/transformed/jetified-coil-core-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/0013d044a201130ab7dfe6683b32a16d/transformed/jetified-barcode-scanning-17.3.0/proguard.txt
# We keep all fields for every generated proto file as the runtime uses
# reflection over them that ProGuard cannot detect. Without this keep
# rule, fields may be removed that would cause runtime failures.
-keepclassmembers class * extends com.google.android.gms.internal.mlkit_vision_barcode_bundled.zzeh {
  <fields>;
}

# This prevents the names of native methods from being obfuscated and prevents
# UnsatisfiedLinkErrors.
-keepclasseswithmembernames class * {
    native <methods>;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/0013d044a201130ab7dfe6683b32a16d/transformed/jetified-barcode-scanning-17.3.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/57230e1c532295c49d29e57f12beeb20/transformed/jetified-common-18.11.0/proguard.txt
# Annotations are implemented as attributes, so we have to explicitly keep them.
# Catch all which encompasses attributes like RuntimeVisibleParameterAnnotations
# and RuntimeVisibleTypeAnnotations
-keepattributes RuntimeVisible*Annotation*

# JNI is an entry point that's hard to keep track of, so there's
# an annotation to mark fields and methods used by native code.

# Keep the annotations that proguard needs to process.
-keep class com.google.android.apps.common.proguard.UsedBy*

# Just because native code accesses members of a class, does not mean that the
# class itself needs to be annotated - only annotate classes that are
# referenced themselves in native code.
-keep @com.google.android.apps.common.proguard.UsedBy* class * {
  <init>();
}
-keepclassmembers class * {
    @com.google.android.apps.common.proguard.UsedBy* *;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/57230e1c532295c49d29e57f12beeb20/transformed/jetified-common-18.11.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/a4d69ae5d10864246f39dec7205d611e/transformed/appcompat-1.7.1/proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/a4d69ae5d10864246f39dec7205d611e/transformed/appcompat-1.7.1/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/7c755889bbac98accf9f976e7dbf8d2d/transformed/jetified-play-services-base-18.5.0/proguard.txt
# b/35135904 Ensure that proguard will not strip the mResultGuardian.
-keepclassmembers class com.google.android.gms.common.api.internal.BasePendingResult {
  com.google.android.gms.common.api.internal.BasePendingResult$ReleasableResultGuardian mResultGuardian;
}



# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/7c755889bbac98accf9f976e7dbf8d2d/transformed/jetified-play-services-base-18.5.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/e17840b69448db816ef88bc5f8248161/transformed/jetified-play-services-tasks-18.2.0/proguard.txt


# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/e17840b69448db816ef88bc5f8248161/transformed/jetified-play-services-tasks-18.2.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/3698ce01054e060f51e6a9d64f771469/transformed/jetified-play-services-basement-18.4.0/proguard.txt
# Needed when building against pre-Marshmallow SDK.
-dontwarn android.security.NetworkSecurityPolicy

# Needed when building against Marshmallow SDK.
-dontwarn android.app.Notification

# Protobuf has references not on the Android boot classpath
-dontwarn sun.misc.Unsafe
-dontwarn libcore.io.Memory

# Annotations used during internal SDK shrinking.
-dontwarn com.google.android.apps.common.proguard.UsedBy*
-dontwarn com.google.android.apps.common.proguard.SideEffectFree

# Annotations referenced by the SDK but whose definitions are contained in
# non-required dependencies.
-dontwarn javax.annotation.**
-dontwarn org.checkerframework.**
-dontwarn com.google.errorprone.annotations.**
-dontwarn org.jspecify.nullness.NullMarked

# Annotations no longer exist. Suppression prevents ProGuard failures in
# SDKs which depend on earlier versions of play-services-basement.
-dontwarn com.google.android.gms.common.util.VisibleForTesting

# Proguard flags for consumers of the Google Play services SDK
# https://developers.google.com/android/guides/setup#add_google_play_services_to_your_project

# Keep SafeParcelable NULL value, needed for reflection by DowngradeableSafeParcel
-keepclassmembers public class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
    public static final *** NULL;
}

# Needed for Parcelable/SafeParcelable classes & their creators to not get renamed, as they are
# found via reflection.
-keep class com.google.android.gms.common.internal.ReflectedParcelable
-keepnames class * implements com.google.android.gms.common.internal.ReflectedParcelable
-keepclassmembers class * implements android.os.Parcelable {
  public static final *** CREATOR;
}

# Keep the classes/members we need for client functionality.
-keep @interface android.support.annotation.Keep
-keep @androidx.annotation.Keep class *
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <fields>;
}
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <methods>;
}

# Keep androidX equivalent of above android.support to allow Jetification.
-keep @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class *
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <fields>;
}
-keepclasseswithmembers class * {
  @androidx.annotation.Keep <methods>;
}

# Keep the names of classes/members we need for client functionality.
-keep @interface com.google.android.gms.common.annotation.KeepName
-keepnames @com.google.android.gms.common.annotation.KeepName class *
-keepclassmembernames class * {
  @com.google.android.gms.common.annotation.KeepName *;
}

# Keep Dynamite API entry points
-keep @interface com.google.android.gms.common.util.DynamiteApi
-keep @com.google.android.gms.common.util.DynamiteApi public class * {
  public <fields>;
  public <methods>;
}



# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/3698ce01054e060f51e6a9d64f771469/transformed/jetified-play-services-basement-18.4.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/4dd7599967580273f0acd8797e067cf4/transformed/fragment-1.8.8/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# FragmentTransition will reflectively lookup:
# androidx.transition.FragmentTransitionSupport
# We should ensure that we keep the constructor if the code using this is alive
-if class androidx.fragment.app.FragmentTransition {
   private static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl();
}
-keep class androidx.transition.FragmentTransitionSupport {
    public <init>();
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/4dd7599967580273f0acd8797e067cf4/transformed/fragment-1.8.8/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/d5e13e5bb32b274defe8cadc24f36b3a/transformed/jetified-navigation-runtime-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/d5e13e5bb32b274defe8cadc24f36b3a/transformed/jetified-navigation-runtime-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/fd1338476edfffd1d1e91852fafe1770/transformed/jetified-navigation-common-release/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NavArgsLazy creates NavArgs instances using reflection
-if public class ** implements androidx.navigation.NavArgs
-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

# Retain the @Navigator.Name annotation on each subclass of Navigator.
# R8 full mode only retains annotations on items matched by a -keep rule,
# hence the extra -keep rule for the subclasses of Navigator.
#
# A -keep rule for the Navigator.Name annotation class is not required
# since the annotation is referenced from the code.
-keepattributes RuntimeVisibleAnnotations
-keep,allowobfuscation,allowshrinking class * extends androidx.navigation.Navigator

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/fd1338476edfffd1d1e91852fafe1770/transformed/jetified-navigation-common-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/ac50c084ea21ea31cd105a777aa623be/transformed/jetified-navigation-compose-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/ac50c084ea21ea31cd105a777aa623be/transformed/jetified-navigation-compose-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/4d0dfe78a69fdfd5aa99f4a5e807d049/transformed/jetified-animation-core-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/4d0dfe78a69fdfd5aa99f4a5e807d049/transformed/jetified-animation-core-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/6cadb1f64a53410b89983b45dd9cc3e6/transformed/jetified-material-ripple-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/6cadb1f64a53410b89983b45dd9cc3e6/transformed/jetified-material-ripple-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/2e9c56999cbddc86b49f41bf5ba310c1/transformed/jetified-animation-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/2e9c56999cbddc86b49f41bf5ba310c1/transformed/jetified-animation-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/f94cbf9bc420be8442618a371a70646f/transformed/jetified-foundation-layout-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/f94cbf9bc420be8442618a371a70646f/transformed/jetified-foundation-layout-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/1a1c361cdc2c1e05749755900e70cf17/transformed/jetified-foundation-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
}


# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/1a1c361cdc2c1e05749755900e70cf17/transformed/jetified-foundation-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/d1c014fcd26dfa0b16667dcd5f0f90a4/transformed/jetified-ui-unit-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/d1c014fcd26dfa0b16667dcd5f0f90a4/transformed/jetified-ui-unit-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/e250e0f71b8e5120ac7c39365f2f6fa6/transformed/jetified-ui-geometry-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/e250e0f71b8e5120ac7c39365f2f6fa6/transformed/jetified-ui-geometry-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/5ca444f8a399ec3183e698eace29950c/transformed/jetified-ui-graphics-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/5ca444f8a399ec3183e698eace29950c/transformed/jetified-ui-graphics-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/c6ed1c6436cb7be00c62de45a6619201/transformed/jetified-ui-util-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/c6ed1c6436cb7be00c62de45a6619201/transformed/jetified-ui-util-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/6ed2a40f7b54f2974c7a1c90adf0068c/transformed/jetified-ui-text-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/6ed2a40f7b54f2974c7a1c90adf0068c/transformed/jetified-ui-text-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/600268b8ea132505f45034ef75babdd9/transformed/jetified-ui-tooling-preview-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/600268b8ea132505f45034ef75babdd9/transformed/jetified-ui-tooling-preview-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/9f5783bf0bb4066a34f16cc252a739d8/transformed/jetified-savedstate-ktx-1.3.1/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/9f5783bf0bb4066a34f16cc252a739d8/transformed/jetified-savedstate-ktx-1.3.1/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/4f9213669f559a83a270b0f3a463f9ab/transformed/jetified-savedstate-compose-release/proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.savedstate.compose.LocalSavedStateRegistryOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalSavedStateRegistryOwner` to ensure backward compatibility
# when using SavedState >= 1.3 with Compose <= 1.7.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalSavedStateRegistryOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalSavedStateRegistryOwner();
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/4f9213669f559a83a270b0f3a463f9ab/transformed/jetified-savedstate-compose-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/2bc1ae93b1a7c1c8724e603c9b7fe075/transformed/jetified-savedstate-release/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/2bc1ae93b1a7c1c8724e603c9b7fe075/transformed/jetified-savedstate-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/28120a399edba52c7e1ab3b3ee99aa85/transformed/jetified-core-ktx-1.16.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/28120a399edba52c7e1ab3b3ee99aa85/transformed/jetified-core-ktx-1.16.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/5817a7eb97d49fa83bfd63c18cd34a04/transformed/vectordrawable-animated-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/5817a7eb97d49fa83bfd63c18cd34a04/transformed/vectordrawable-animated-1.1.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/e89f464618b1869b65af752e8036f3d5/transformed/jetified-graphics-path-1.0.1/proguard.txt
-keepclasseswithmembers class androidx.graphics.path.** {
    native <methods>;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/e89f464618b1869b65af752e8036f3d5/transformed/jetified-graphics-path-1.0.1/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/ccbe7a66b7bf0ede1787b5653a89a1eb/transformed/core-1.16.0/proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/ccbe7a66b7bf0ede1787b5653a89a1eb/transformed/core-1.16.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/09db09336575ced4d4c802d0c2dfd7d9/transformed/jetified-lifecycle-process-2.9.2/proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/09db09336575ced4d4c802d0c2dfd7d9/transformed/jetified-lifecycle-process-2.9.2/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/5cab203bf7d182f9f3303f0afa0cec11/transformed/jetified-lifecycle-runtime-release/proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# The deprecated `android.app.Fragment` creates `Fragment` instances using reflection.
# See: b/338958225, b/341537875
-keepclasseswithmembers,allowobfuscation public class androidx.lifecycle.ReportFragment {
    public <init>();
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/5cab203bf7d182f9f3303f0afa0cec11/transformed/jetified-lifecycle-runtime-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/dd91683f7761e347c5fcfb7a089b020a/transformed/jetified-lifecycle-viewmodel-ktx-2.9.2/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/dd91683f7761e347c5fcfb7a089b020a/transformed/jetified-lifecycle-viewmodel-ktx-2.9.2/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/d2590ce75db158c19e9db3716769162c/transformed/jetified-lifecycle-livedata-core-ktx-2.9.2/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/d2590ce75db158c19e9db3716769162c/transformed/jetified-lifecycle-livedata-core-ktx-2.9.2/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/80330c4b6fc700f8387668154a2b984f/transformed/lifecycle-livedata-core-2.9.2/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/80330c4b6fc700f8387668154a2b984f/transformed/lifecycle-livedata-core-2.9.2/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/5833577d58a7c3c58d1a5d47c5ebb4bd/transformed/lifecycle-livedata-2.9.2/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/5833577d58a7c3c58d1a5d47c5ebb4bd/transformed/lifecycle-livedata-2.9.2/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/d97f1e8cf7c9c2a5a88321eac150c65e/transformed/rules/lib/META-INF/proguard/androidx-lifecycle-lifecycle-common-java8.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/d97f1e8cf7c9c2a5a88321eac150c65e/transformed/rules/lib/META-INF/proguard/androidx-lifecycle-lifecycle-common-java8.pro
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/133f632fcdb9834a19ea60b46e82955f/transformed/jetified-lifecycle-viewmodel-savedstate-release/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/133f632fcdb9834a19ea60b46e82955f/transformed/jetified-lifecycle-viewmodel-savedstate-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/8e3a70cdb9a1c8ffb04361cc7ed1c883/transformed/jetified-lifecycle-viewmodel-release/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/8e3a70cdb9a1c8ffb04361cc7ed1c883/transformed/jetified-lifecycle-viewmodel-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/51c0994a9c1bca06c52dc4d979669dc5/transformed/jetified-lifecycle-runtime-compose-release/proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.lifecycle.compose.LocalLifecycleOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalLifecycleOwner` to ensure backward compatibility
# when using Lifecycle 2.8+ with Compose 1.6.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/51c0994a9c1bca06c52dc4d979669dc5/transformed/jetified-lifecycle-runtime-compose-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/591034823bf4848ebff9084568f6e91b/transformed/jetified-lifecycle-viewmodel-compose-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/591034823bf4848ebff9084568f6e91b/transformed/jetified-lifecycle-viewmodel-compose-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/f06c6b96764c3c73f0e076fcef86efde/transformed/jetified-ui-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# We supply these as stubs and are able to link to them at runtime
# because they are hidden public classes in Android. We don't want
# R8 to complain about them not being there during optimization.
-dontwarn android.view.RenderNode
-dontwarn android.view.DisplayListCanvas
-dontwarn android.view.HardwareCanvas

-keepclassmembers class androidx.compose.ui.platform.ViewLayerContainer {
    protected void dispatchGetDisplayList();
}

-keepclassmembers class androidx.compose.ui.platform.AndroidComposeView {
    android.view.View findViewByAccessibilityIdTraversal(int);
}

# Users can create Modifier.Node instances that implement multiple Modifier.Node interfaces,
# so we cannot tell whether two modifier.node instances are of the same type without using
# reflection to determine the class type. See b/265188224 for more context.
-keep,allowshrinking class * extends androidx.compose.ui.node.ModifierNodeElement

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);
}

# When pointer input modifier nodes are added dynamically and have the same keys (common when
# developers `Unit` for their keys), we need a way to differentiate them and using a
# functional interface and comparing classes allows us to do that.
-keepnames class androidx.compose.ui.input.pointer.PointerInputEventHandler {
    *;
}


# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/f06c6b96764c3c73f0e076fcef86efde/transformed/jetified-ui-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/c82c5389b131c19032a306ca63e23666/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/kotlin-reflect.pro
# When editing this file, update the following files as well:
# - META-INF/com.android.tools/proguard/kotlin-reflect.pro
# - META-INF/com.android.tools/r8-upto-1.6.0/kotlin-reflect.pro
# - META-INF/proguard/kotlin-reflect.pro
# Keep Metadata annotations so they can be parsed at runtime.
-keep class kotlin.Metadata { *; }

# Keep generic signatures and annotations at runtime.
# R8 requires InnerClasses and EnclosingMethod if you keepattributes Signature.
-keepattributes InnerClasses,Signature,RuntimeVisible*Annotations,EnclosingMethod

# Don't note on API calls from different JVM versions as they're gated properly at runtime.
-dontnote kotlin.internal.PlatformImplementationsKt

# Don't note on internal APIs, as there is some class relocating that shrinkers may unnecessarily find suspicious.
-dontwarn kotlin.reflect.jvm.internal.**

# Statically guarded by try-catch block and not used on Android, see CacheByClass
-dontwarn java.lang.ClassValue

# Do not even execute try-catch block for ClassValue
-assumenosideeffects class kotlin.reflect.jvm.internal.CacheByClassKt {
    boolean useClassValue return false;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/c82c5389b131c19032a306ca63e23666/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/kotlin-reflect.pro
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/a51d556e05ef0607d08896d364861d53/transformed/jetified-runtime-saveable-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/a51d556e05ef0607d08896d364861d53/transformed/jetified-runtime-saveable-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/ef934500865fc5ccdd62d3b262699cc9/transformed/jetified-runtime-release/proguard.txt
-assumenosideeffects public class androidx.compose.runtime.ComposerKt {
    void sourceInformation(androidx.compose.runtime.Composer,java.lang.String);
    void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String);
    void sourceInformationMarkerEnd(androidx.compose.runtime.Composer);
}

# Composer's class initializer doesn't do anything but create an EMPTY object. Marking the
# initializers as having no side effects can help encourage shrinkers to merge/devirtualize Composer
# with ComposerImpl.
-assumenosideeffects public class androidx.compose.runtime.Composer {
    void <clinit>();
}
-assumenosideeffects public class androidx.compose.runtime.ComposerImpl {
    void <clinit>();
}

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.runtime.** {
    # java.lang.Void == methods that return Nothing
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);

    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);

    static void compose*RuntimeError(...);
    static java.lang.Void compose*RuntimeError(...);
}


# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/ef934500865fc5ccdd62d3b262699cc9/transformed/jetified-runtime-release/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/c382db15a47c7eca820ef3409d5503c9/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/c382db15a47c7eca820ef3409d5503c9/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/5c2b954532f3aa1372512bdfc1da90b0/transformed/rules/lib/META-INF/proguard/ktor.pro
# Most of volatile fields are updated with AtomicFU and should not be mangled/removed
-keepclassmembers class io.ktor.** {
    volatile <fields>;
}

-keepclassmembernames class io.ktor.** {
    volatile <fields>;
}

# client engines are loaded using ServiceLoader so we need to keep them
-keep class io.ktor.client.engine.** implements io.ktor.client.HttpClientEngineContainer


# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/5c2b954532f3aa1372512bdfc1da90b0/transformed/rules/lib/META-INF/proguard/ktor.pro
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/7f720ce73aa541bcc3b1a3906ba94424/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.internal.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/7f720ce73aa541bcc3b1a3906ba94424/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/e982e7056511b532e37972bf628fa5ec/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-common.pro
# Keep `Companion` object fields of serializable classes.
# This avoids serializer lookup through `getDeclaredClasses` as done for named companion objects.
-if @kotlinx.serialization.Serializable class **
-keepclassmembers class <1> {
    static <1>$* Companion;
}

# Keep names for named companion object from obfuscation
# Names of a class and of a field are important in lookup of named companion in runtime
-keepnames @kotlinx.serialization.internal.NamedCompanion class *
-if @kotlinx.serialization.internal.NamedCompanion class *
-keepclassmembernames class * {
    static <1> *;
}

# Keep `serializer()` on companion objects (both default and named) of serializable classes.
-if @kotlinx.serialization.Serializable class ** {
    static **$* *;
}
-keepclassmembers class <2>$<3> {
    kotlinx.serialization.KSerializer serializer(...);
}

# Keep `INSTANCE.serializer()` of serializable objects.
-if @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
}
-keepclassmembers class <1> {
    public static <1> INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# @Serializable and @Polymorphic are used at runtime for polymorphic serialization.
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

# Don't print notes about potential mistakes or omissions in the configuration for kotlinx-serialization classes
# See also https://github.com/Kotlin/kotlinx.serialization/issues/1900
-dontnote kotlinx.serialization.**

# Serialization core uses `java.lang.ClassValue` for caching inside these specified classes.
# If there is no `java.lang.ClassValue` (for example, in Android), then R8/ProGuard will print a warning.
# However, since in this case they will not be used, we can disable these warnings
-dontwarn kotlinx.serialization.internal.ClassValueReferences

# disable optimisation for descriptor field because in some versions of ProGuard, optimization generates incorrect bytecode that causes a verification error
# see https://github.com/Kotlin/kotlinx.serialization/issues/2719
-keepclassmembers public class **$$serializer {
    private ** descriptor;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/e982e7056511b532e37972bf628fa5ec/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-common.pro
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/e982e7056511b532e37972bf628fa5ec/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-r8.pro
# Rule to save runtime annotations on serializable class.
# If the R8 full mode is used, annotations are removed from classes-files.
#
# For the annotation serializer, it is necessary to read the `Serializable` annotation inside the serializer<T>() function - if it is present,
# then `SealedClassSerializer` is used, if absent, then `PolymorphicSerializer'.
#
# When using R8 full mode, all interfaces will be serialized using `PolymorphicSerializer`.
#
# see https://github.com/Kotlin/kotlinx.serialization/issues/2050

 -if @kotlinx.serialization.Serializable class **
 -keep, allowshrinking, allowoptimization, allowobfuscation, allowaccessmodification class <1>


# Rule to save INSTANCE field and serializer function for Kotlin serializable objects.
#
# R8 full mode works differently if the instance is not explicitly accessed in the code.
#
# see https://github.com/Kotlin/kotlinx.serialization/issues/2861
# see https://issuetracker.google.com/issues/379996140

-keepclassmembers @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/e982e7056511b532e37972bf628fa5ec/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-r8.pro
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/f04e3399fb71b338b501d97c267653c6/transformed/jetified-core-viewtree-1.0.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/f04e3399fb71b338b501d97c267653c6/transformed/jetified-core-viewtree-1.0.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/319a6a10fd01df2fad8544092106cac2/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/319a6a10fd01df2fad8544092106cac2/transformed/jetified-startup-runtime-1.1.1/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/80320eb719747e466f18612360f25d26/transformed/jetified-featurecombinationquery-1.5.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/80320eb719747e466f18612360f25d26/transformed/jetified-featurecombinationquery-1.5.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/4623c9708c227fc6c053e44db5fbd845/transformed/versionedparcelable-1.1.1/proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/4623c9708c227fc6c053e44db5fbd845/transformed/versionedparcelable-1.1.1/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/c18d90a94a58fb4e4deb906bc62d09d7/transformed/rules/lib/META-INF/proguard/androidx-collection-collection-ktx.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/c18d90a94a58fb4e4deb906bc62d09d7/transformed/rules/lib/META-INF/proguard/androidx-collection-collection-ktx.pro
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/6b6ae982ed4bf9a06e8ecaf09c6ca701/transformed/jetified-transport-backend-cct-2.3.3/proguard.txt
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/6b6ae982ed4bf9a06e8ecaf09c6ca701/transformed/jetified-transport-backend-cct-2.3.3/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/8e7070cba33090c56a4411cdc6fd01f6/transformed/jetified-transport-runtime-2.2.6/proguard.txt
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/8e7070cba33090c56a4411cdc6fd01f6/transformed/jetified-transport-runtime-2.2.6/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/034593c988600a893b6b4b5e9bc3e91f/transformed/jetified-transport-api-2.2.1/proguard.txt
-dontwarn com.google.auto.value.AutoValue
-dontwarn com.google.auto.value.AutoValue$Builder

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/034593c988600a893b6b4b5e9bc3e91f/transformed/jetified-transport-api-2.2.1/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/2bbd897c40e4f2bb0e3f3e7ad0a00e53/transformed/jetified-firebase-components-16.1.0/proguard.txt
-dontwarn com.google.firebase.components.Component$Instantiation
-dontwarn com.google.firebase.components.Component$ComponentType

-keep class * implements com.google.firebase.components.ComponentRegistrar

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/2bbd897c40e4f2bb0e3f3e7ad0a00e53/transformed/jetified-firebase-components-16.1.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/0313351c2d7be3f004cd0b96bf607273/transformed/jetified-firebase-encoders-json-17.1.0/proguard.txt

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/0313351c2d7be3f004cd0b96bf607273/transformed/jetified-firebase-encoders-json-17.1.0/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/8a752d5908660efd57126445e81fe548/transformed/exifinterface-1.4.1/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/8a752d5908660efd57126445e81fe548/transformed/exifinterface-1.4.1/proguard.txt
# The proguard configuration file for the following section is /Users/rodvar/.gradle/caches/8.14.3/transforms/43e3d91a58cb4fcfb76cfbca2b022652/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from /Users/rodvar/.gradle/caches/8.14.3/transforms/43e3d91a58cb4fcfb76cfbca2b022652/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
# The proguard configuration file for the following section is <unknown>

# End of content from <unknown>